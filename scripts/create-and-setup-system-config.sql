-- ===================================================================
-- üîß CREATE SYSTEM_CONFIGS TABLE AND INSERT DEFAULT DATA
-- ===================================================================
-- Script ho√†n ch·ªânh ƒë·ªÉ t·∫°o b·∫£ng system_configs v√† insert default configs
-- D√†nh cho ChatBot Banking Backend System

-- Drop table if exists (optional - uncomment if needed)
-- DROP TABLE IF EXISTS system_configs;

-- ===================================================================
-- üìã CREATE TABLE system_configs
-- ===================================================================

CREATE TABLE IF NOT EXISTS system_configs (
    id VARCHAR(36) NOT NULL PRIMARY KEY DEFAULT (UUID()),
    
    -- Config key v√† value
    config_key ENUM(
        'ai_confidence_threshold',
        'enable_waiting_message', 
        'waiting_message_content',
        'max_retry_count',
        'reviewer_timeout_minutes',
        'auto_assign_strategy',
        'system_maintenance_mode',
        'max_messages_per_conversation',
        'default_theme',
        'session_timeout_minutes',
        'enable_email_notifications',
        'enable_sms_notifications'
    ) NOT NULL UNIQUE,
    
    config_value TEXT NOT NULL,
    
    -- Data type c·ªßa config value
    data_type ENUM('string', 'number', 'boolean', 'json') DEFAULT 'string',
    
    -- M√¥ t·∫£ config
    description TEXT,
    
    -- Status flags
    is_active BOOLEAN DEFAULT TRUE,
    is_system_config BOOLEAN DEFAULT FALSE COMMENT 'System config kh√¥ng ƒë∆∞·ª£c ph√©p x√≥a',
    
    -- Audit fields
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by VARCHAR(36),
    updated_by VARCHAR(36),
    
    -- Indexes
    INDEX idx_config_key (config_key),
    INDEX idx_is_active (is_active),
    INDEX idx_is_system_config (is_system_config),
    INDEX idx_created_at (created_at)
    
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ===================================================================
-- üå± INSERT DEFAULT SYSTEM CONFIGURATIONS
-- ===================================================================

-- Disable foreign key checks temporarily
SET FOREIGN_KEY_CHECKS = 0;

-- Clear existing data (optional)
-- DELETE FROM system_configs;

-- Insert default system configurations
INSERT IGNORE INTO system_configs (
    id,
    config_key,
    config_value,
    data_type,
    description,
    is_active,
    is_system_config,
    created_at,
    updated_at,
    created_by,
    updated_by
) VALUES

-- ü§ñ AI Agent Configuration
(
    UUID(),
    'ai_confidence_threshold',
    '80',
    'number',
    'Ng∆∞·ª°ng ƒë·ªô ch√≠nh x√°c c·ªßa AI Agent ƒë·ªÉ quy·∫øt ƒë·ªãnh auto response (0-100%)',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),

-- üí¨ Message Configuration  
(
    UUID(),
    'enable_waiting_message',
    'true',
    'boolean',
    'C√≥ g·ª≠i waiting message khi chuy·ªÉn tin nh·∫Øn sang manual review',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),
(
    UUID(),
    'waiting_message_content',
    'C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá. Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong th·ªùi gian s·ªõm nh·∫•t.',
    'string',
    'N·ªôi dung waiting message g·ª≠i cho kh√°ch h√†ng',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),

-- üë• Reviewer Configuration
(
    UUID(),
    'max_retry_count',
    '3',
    'number',
    'S·ªë l·∫ßn retry t·ªëi ƒëa khi reviewer kh√¥ng ph·∫£n h·ªìi',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),
(
    UUID(),
    'reviewer_timeout_minutes',
    '30',
    'number',
    'Th·ªùi gian timeout cho reviewer (ph√∫t)',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),
(
    UUID(),
    'auto_assign_strategy',
    'round_robin',
    'string',
    'Chi·∫øn l∆∞·ª£c ph√¢n ph·ªëi tin nh·∫Øn ƒë·∫øn reviewer (round_robin, load_based, expertise_based)',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),

-- üñ•Ô∏è System Configuration
(
    UUID(),
    'system_maintenance_mode',
    'false',
    'boolean',
    'Ch·∫ø ƒë·ªô b·∫£o tr√¨ h·ªá th·ªëng',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),
(
    UUID(),
    'max_messages_per_conversation',
    '100',
    'number',
    'S·ªë tin nh·∫Øn t·ªëi ƒëa trong m·ªôt conversation',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),
(
    UUID(),
    'session_timeout_minutes',
    '480',
    'number',
    'Th·ªùi gian timeout session (ph√∫t) - 8 gi·ªù',
    TRUE,
    TRUE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),

-- üé® Frontend Configuration
(
    UUID(),
    'default_theme',
    'light',
    'string',
    'Theme m·∫∑c ƒë·ªãnh cho frontend (light, dark)',
    TRUE,
    FALSE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),

-- üìß Notification Configuration
(
    UUID(),
    'enable_email_notifications',
    'true',
    'boolean',
    'K√≠ch ho·∫°t th√¥ng b√°o qua email',
    TRUE,
    FALSE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
),
(
    UUID(),
    'enable_sms_notifications',
    'false',
    'boolean',
    'K√≠ch ho·∫°t th√¥ng b√°o qua SMS',
    TRUE,
    FALSE,
    NOW(),
    NOW(),
    'system-sql-setup',
    'system-sql-setup'
);

-- Re-enable foreign key checks
SET FOREIGN_KEY_CHECKS = 1;

-- ===================================================================
-- üîç VERIFICATION AND SUMMARY
-- ===================================================================

-- Show table structure
DESCRIBE system_configs;

-- Count records by type
SELECT 
    'Total Configs' as metric,
    COUNT(*) as count
FROM system_configs
UNION ALL
SELECT 
    'System Configs' as metric,
    COUNT(*) as count
FROM system_configs 
WHERE is_system_config = TRUE
UNION ALL
SELECT 
    'User Configs' as metric,
    COUNT(*) as count
FROM system_configs 
WHERE is_system_config = FALSE
UNION ALL
SELECT 
    'Active Configs' as metric,
    COUNT(*) as count
FROM system_configs 
WHERE is_active = TRUE;

-- Show all created configurations
SELECT 
    'üîß SYSTEM CONFIGURATIONS CREATED' as title;

SELECT 
    CASE 
        WHEN is_system_config = TRUE THEN 'üîí SYSTEM'
        ELSE 'üë§ USER  '
    END as type,
    config_key,
    config_value,
    data_type,
    CASE 
        WHEN is_active = TRUE THEN '‚úÖ Active'
        ELSE '‚ùå Inactive'
    END as status,
    SUBSTRING(description, 1, 60) as description_preview
FROM system_configs 
ORDER BY is_system_config DESC, config_key ASC;

-- Show configs by category
SELECT 'ü§ñ AI AGENT CONFIGS' as category;
SELECT config_key, config_value, description 
FROM system_configs 
WHERE config_key IN ('ai_confidence_threshold');

SELECT 'üí¨ MESSAGE CONFIGS' as category;
SELECT config_key, config_value, LEFT(description, 50) as description
FROM system_configs 
WHERE config_key IN ('enable_waiting_message', 'waiting_message_content');

SELECT 'üë• REVIEWER CONFIGS' as category;
SELECT config_key, config_value, description
FROM system_configs 
WHERE config_key IN ('max_retry_count', 'reviewer_timeout_minutes', 'auto_assign_strategy');

SELECT 'üñ•Ô∏è SYSTEM CONFIGS' as category;
SELECT config_key, config_value, description
FROM system_configs 
WHERE config_key IN ('system_maintenance_mode', 'max_messages_per_conversation', 'session_timeout_minutes');

SELECT 'üé® FRONTEND CONFIGS' as category;
SELECT config_key, config_value, description
FROM system_configs 
WHERE config_key IN ('default_theme');

SELECT 'üìß NOTIFICATION CONFIGS' as category;
SELECT config_key, config_value, description
FROM system_configs 
WHERE config_key IN ('enable_email_notifications', 'enable_sms_notifications');

-- ===================================================================
-- üéâ SETUP COMPLETED SUCCESSFULLY!
-- ===================================================================
-- 
-- ‚úÖ Table 'system_configs' created with proper structure
-- ‚úÖ 12 default system configurations inserted
-- ‚úÖ Proper indexes added for performance
-- ‚úÖ Data types and constraints configured
-- 
-- üìã Configuration Categories:
-- ü§ñ AI Agent (1): ai_confidence_threshold = 80
-- üí¨ Message (2): enable_waiting_message, waiting_message_content  
-- üë• Reviewer (3): max_retry_count, reviewer_timeout_minutes, auto_assign_strategy
-- üñ•Ô∏è System (3): system_maintenance_mode, max_messages_per_conversation, session_timeout_minutes
-- üé® Frontend (1): default_theme = light
-- üìß Notifications (2): enable_email_notifications, enable_sms_notifications
-- 
-- üöÄ Next Steps:
-- 1. Start your NestJS application: yarn start:dev
-- 2. Test API endpoints: GET /system-config  
-- 3. Update configs via admin dashboard or API
-- 
-- =================================================================== 